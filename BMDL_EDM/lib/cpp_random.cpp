#include <cstddef>
//#include <set>
//#include <map>
//#include <vector>
//#include <array>        // std::array
//#include <iostream>
//#include <cassert>
#include <algorithm>    // std::random_shuffle
#include <ctime>        // std::time
#include <cstdlib>      // std::rand, std::srand
#include <functional>   // std::ref
#include <random>
//#include "cpp_random.h"

// Global instantiation of a pseudo-random number generator engine.
std::mt19937 _eng;

void re_seed_rng() {
    std::random_device r; // This creates a "random device" random number generator which is non-deterministic.
    std::array< int , 624 > seed_data; // This is where the seed numbers generated by r() are stored.
    std::generate_n( seed_data.data() , seed_data.size() , std::ref( r ) ); // The seed numbers are generated and stored.
    std::seed_seq seq( std::begin( seed_data ) , std::end( seed_data ) ); // The seed numbers are used to create the seed for the mt19937 generator.
    _eng.seed( seq ); // The mt19937 is seeded.
}

/*
int main() {

}
*/
